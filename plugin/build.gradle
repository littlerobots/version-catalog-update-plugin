import com.vanniktech.maven.publish.SonatypeHost
import com.gradleup.gr8.FilterTransform

plugins {
    id 'java-gradle-plugin'
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.mavenPublish)
    alias(libs.plugins.gradlePluginPublish)
    alias(libs.plugins.gr8)
}

group = ext.GROUP
version = ext.VERSION_NAME

mavenPublishing {
    publishToMavenCentral SonatypeHost.CENTRAL_PORTAL
    signAllPublications()
    pomFromGradleProperties()
}

gradlePlugin {
    plugins {
        create("versionCatalogUpdate") {
            id = "nl.littlerobots.version-catalog-update"
            displayName = "A plugin that updates the version catalog file."
            description =
                    "Provides tasks to format and update the version catalog file with the latest dependency versions."
            implementationClass = "nl.littlerobots.vcu.plugin.VersionCatalogUpdatePlugin"
            tags = ["version", "catalog", "dependencies", "versions"]
        }
    }
}

configurations {
    shadowedDependencies
    compileOnlyDependencies {
        attributes {
            attribute(Usage.USAGE_ATTRIBUTE, project.objects.named(Usage.class, Usage.JAVA_API))
            // this attribute is needed to filter out some classes, see https://issuetracker.google.com/u/1/issues/380805015
            attribute(ArtifactTypeDefinition.ARTIFACT_TYPE_ATTRIBUTE, FilterTransform.artifactType)
        }
    }
    compileOnlyDependencies.extendsFrom(compileOnly)
}

components.java.withVariantsFromConfiguration(configurations.runtimeElements) {
    skip()
}

dependencies {
    shadowedDependencies(project(path: ":catalog"))
    compileOnly gradleApi()
    testImplementation libs.junit
    testImplementation gradleTestKit()
}

gr8 {
    def shadowedJar = create("default") {
        addProgramJarsFrom(configurations.shadowedDependencies)
        addProgramJarsFrom(tasks.jar)
        addClassPathJarsFrom(configurations.compileOnlyDependencies)
        proguardFile("rules.pro")
        registerFilterTransform(["com.gradleup.gr8.FilterTransform", ".*/impldep/META-INF/versions/.*"])
        r8Version("8.10.24")
    }
    removeGradleApiFromApi()
    replaceOutgoingJar(shadowedJar)
    configurations.implementation.extendsFrom(configurations.shadowedDependencies)
}
